provider "aws" {
  region = "ap-south-1"
profile = "sirshendudutta"
}
 
#creating key

resource "tls_private_key" "example" {
  algorithm = "RSA"
  rsa_bits  = 4096
}

resource "aws_key_pair" "generated_key" {
  
  public_key = "${tls_private_key.example.public_key_openssh}"
}
resource "local_file" "mykey" {
content = "${tls_private_key.example.private_key_pem}"
filename="C:/Users/SIRSHENDU DUTTA/Downloads/sirshendudu1.pem"
file_permission=0400
}
#creating security group
resource "aws_security_group" "allow_tlsp" {
  name        = "allow_tlsp"
  description = "Allow TLS inbound traffic"

 ingress {
    from_port = 0
    to_port = 0
    protocol = -1
    cidr_blocks = ["0.0.0.0/0"]
  }
   egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
  tags = {
    Name = "allow_tlsp"
  }
}
#creating aws instance
resource "aws_instance" "LinuxOS" {
  ami   ="ami-0447a12f28fddb066"
  instance_type = "t2.micro"
  key_name="${aws_key_pair.generated_key.key_name}"
  vpc_security_group_ids = ["${aws_security_group.allow_tlsp.id}"]
connection {
    type     = "ssh"
    user     = "ec2-user"
    private_key = tls_private_key.example.private_key_pem
    host     = aws_instance.LinuxOS.public_ip
  }
 provisioner "remote-exec" {
    inline = [
      "sudo yum install httpd  php git -y",
      "sudo systemctl restart httpd",
      "sudo systemctl enable httpd",
    ]
  }
  tags = {
    Name = "Myfirstos"
  }
}
#creating ebs volume

resource "aws_ebs_volume" "persistent_storage" {
  availability_zone = aws_instance.LinuxOS.availability_zone
  size              = 1
  tags = {
    Name = "ebs_volume"
  }
}
#attching volume to the instance
resource "aws_volume_attachment" "ebs_att" {
  device_name = "/dev/sdh"
  volume_id   = aws_ebs_volume.persistent_storage.id
  instance_id = aws_instance.LinuxOS.id
 
}
# Creating S3 Bucket
resource "aws_s3_bucket" "b" {
  acl           = "private"
  force_destroy = true

  tags = {
    Name = "My bucket"
  }
}
resource "aws_s3_bucket_public_access_block" "publicobject" {
  bucket = "${aws_s3_bucket.b.id}"

  block_public_acls   = false
  block_public_policy = false
}
# Uploading a image on this bucket
resource "aws_s3_bucket_object" "object" {
  bucket = "${aws_s3_bucket.b.id}"
  key    = "myimage.jpg"
  source = "C:/Users/SIRSHENDU DUTTA/Pictures/Camera Roll/myimage.jpg"
  acl    = "public-read"
  content_type = "image/jpg"
}
